{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of 多模型實驗","provenance":[{"file_id":"1XoC8kM7Acmg-mwRTTmao3gMknZNJ-ulf","timestamp":1577195289101},{"file_id":"1KYvZBu2SGCHi6hgsVpKZvVWHEh4GBIc4","timestamp":1572017335420},{"file_id":"1eYaT_S3bmkX7PObWe9n2mn_eGqOfIIWE","timestamp":1572017134330},{"file_id":"1ygpyjV27mejZK4BZx6fHZzShUzDpKX4E","timestamp":1572016882795},{"file_id":"1t9W9OXFKPiEDKxx2TaFTdq4y18OotgcZ","timestamp":1572015327092},{"file_id":"1lZsR1ZEECO_lXdNoWq0V3Gao4dCHA7LB","timestamp":1565552255552},{"file_id":"15zHNIKmpAOVBJct1VrvLHXne-BgbJmN4","timestamp":1565451078420},{"file_id":"1EqlejhVoYUZpMl1gl0GMG5LBlKDlCgRj","timestamp":1565448187015},{"file_id":"1AkJb1boNLNOpD8YularrScwLVmWmrotU","timestamp":1565187022887},{"file_id":"1aHgPZowZ_0xE2o1J6fNeEtY7zdhOhrVx","timestamp":1565167042854},{"file_id":"1KsiFnqJXXtxLiRXV-TlG-kUixE2I-4Kq","timestamp":1565095509895},{"file_id":"1AH6F2fxQO15KkLILnSkKYzQjUVizyhsI","timestamp":1565086770357},{"file_id":"1AagTSj6DHFmTy68SzjRw2v0E2HNZCfd0","timestamp":1565082472161}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"LtosQUi0BpB6"},"source":["# Colab 界面 簡單介紹\n","* 左側 Files 可以看到你現在用的位置的資料夾\n","* 上方 Runtime -> Change runtime type 可以選用 GPU\n","* 建議 Toos-> Settings -> Editor-> Show line number 要開"]},{"cell_type":"code","metadata":{"id":"916bN-aaYIle","colab":{"base_uri":"https://localhost:8080/","height":374},"executionInfo":{"status":"ok","timestamp":1592663512561,"user_tz":-480,"elapsed":2969,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"b3a59392-1ee3-4bc1-c9f7-ba5ed2709f65"},"source":["# jupyter notebook必備懶人程式碼, 就不用還要寫plt.show()才能看到圖了\n","%matplotlib inline\n","# 查看 GPU 狀態\n","!nvidia-smi\n","%tensorflow_version 1.x"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Sat Jun 20 14:31:50 2020       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 450.36.06    Driver Version: 418.67       CUDA Version: 10.1     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla K80           Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   72C    P8    33W / 149W |      0MiB / 11441MiB |      0%      Default |\n","|                               |                      |                 ERR! |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n","TensorFlow 1.x selected.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"yge3w3SndIFh"},"source":["## 連接到google雲端"]},{"cell_type":"code","metadata":{"id":"Wx-ZX3GswvPu","colab":{"base_uri":"https://localhost:8080/","height":122},"executionInfo":{"status":"ok","timestamp":1592663532592,"user_tz":-480,"elapsed":19052,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"a3c21926-86bf-4ec1-c782-565a1ee108bf"},"source":["# 執行後點擊藍色網址，並進去取得雲端的連結碼\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"v1wlNuhVatwD","colab":{"base_uri":"https://localhost:8080/","height":51},"executionInfo":{"status":"ok","timestamp":1592663559820,"user_tz":-480,"elapsed":11965,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"d4dd31fe-59f4-49d6-e9b2-fb34703108c8"},"source":["# RAdam 與 lookahead q 代表安靜模式\n","!pip install -q keras-rectified-adam\n","!pip install -q keras-lookahead"],"execution_count":null,"outputs":[{"output_type":"stream","text":["  Building wheel for keras-rectified-adam (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for keras-lookahead (setup.py) ... \u001b[?25l\u001b[?25hdone\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"CPR6uUAXdMh9"},"source":["## 引入套件"]},{"cell_type":"code","metadata":{"id":"gsAp-GvSv4gm","colab":{"base_uri":"https://localhost:8080/","height":386},"executionInfo":{"status":"error","timestamp":1592663543437,"user_tz":-480,"elapsed":8463,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"77cf0710-5260-451a-dc89-e523c630da0a"},"source":["import os\n","import numpy as np\n","import pandas as pd\n","import tensorflow as tf\n","from matplotlib import pyplot as plt\n","\n","\n","from sklearn import preprocessing\n","from sklearn.utils import shuffle\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import precision_recall_curve\n","from sklearn.model_selection import train_test_split\n","\n","\n","from keras import layers\n","from keras import regularizers,callbacks,initializers\n","from keras import backend as K\n","from tensorflow.python.keras.optimizers import SGD, Adam ,RMSprop\n","from tensorflow.python.keras.models import Sequential, Model, load_model\n","\n","#RAdam 與 lookahead 有裝再引\n","from keras_radam import RAdam\n","from keras_lookahead import Lookahead\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"},{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-60922ba22ccb>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     21\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;31m#RAdam 與 lookahead 有裝再引\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 23\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mkeras_radam\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mRAdam\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     24\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mkeras_lookahead\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mLookahead\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'keras_radam'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]},{"cell_type":"markdown","metadata":{"id":"OTiVlw9aAhlo"},"source":["## 載入數據"]},{"cell_type":"code","metadata":{"id":"mDcMFJKT_dpx"},"source":["#檔案位置\n","path='/content/drive/My Drive/Colab Notebooks/TueLearning/'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GOfJrH2tAXa-"},"source":["#框框內(位置+檔案名稱)\n","df = pd.read_excel(os.path.join(path,'copy_NCKU_Hypotension.xls'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YPBeapCvAwSf","colab":{"base_uri":"https://localhost:8080/","height":76},"executionInfo":{"status":"ok","timestamp":1586240975068,"user_tz":-480,"elapsed":13313,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"c5021146-1d2d-43e4-eb00-2b74191b8c88"},"source":["#看資料的形狀\n","df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(13320, 15)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"c9wfaofDcSgy","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1586240975068,"user_tz":-480,"elapsed":13302,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"da33fee6-a1b3-4967-af77-c857b9568da4"},"source":["#前十筆資料\n","df.head(10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>年齡</th>\n","      <th>收縮壓</th>\n","      <th>舒張壓</th>\n","      <th>脈搏</th>\n","      <th>呼吸</th>\n","      <th>血液流速</th>\n","      <th>靜脈壓</th>\n","      <th>脫水速率</th>\n","      <th>累積 UF</th>\n","      <th>膜上壓</th>\n","      <th>透析液溫度</th>\n","      <th>透析液流速</th>\n","      <th>生理食鹽水</th>\n","      <th>Heparin</th>\n","      <th>Lebal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>117.000000</td>\n","      <td>64.0</td>\n","      <td>51.000000</td>\n","      <td>18.000000</td>\n","      <td>248.0</td>\n","      <td>150.0</td>\n","      <td>0.57</td>\n","      <td>0.578</td>\n","      <td>49.0</td>\n","      <td>35.5</td>\n","      <td>553.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>129.000000</td>\n","      <td>70.0</td>\n","      <td>49.000000</td>\n","      <td>18.000000</td>\n","      <td>248.0</td>\n","      <td>150.0</td>\n","      <td>0.60</td>\n","      <td>0.000</td>\n","      <td>50.0</td>\n","      <td>39.2</td>\n","      <td>545.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>50</td>\n","      <td>118.000000</td>\n","      <td>63.0</td>\n","      <td>74.000000</td>\n","      <td>18.000000</td>\n","      <td>198.0</td>\n","      <td>117.0</td>\n","      <td>0.87</td>\n","      <td>0.098</td>\n","      <td>64.0</td>\n","      <td>35.9</td>\n","      <td>545.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>50</td>\n","      <td>109.000000</td>\n","      <td>63.0</td>\n","      <td>56.000000</td>\n","      <td>18.000000</td>\n","      <td>198.0</td>\n","      <td>105.0</td>\n","      <td>0.87</td>\n","      <td>0.817</td>\n","      <td>60.0</td>\n","      <td>36.0</td>\n","      <td>545.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>50</td>\n","      <td>133.000000</td>\n","      <td>74.0</td>\n","      <td>77.000000</td>\n","      <td>20.000000</td>\n","      <td>248.0</td>\n","      <td>204.0</td>\n","      <td>0.65</td>\n","      <td>0.005</td>\n","      <td>58.0</td>\n","      <td>35.9</td>\n","      <td>545.0</td>\n","      <td>20.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>50</td>\n","      <td>107.000000</td>\n","      <td>68.0</td>\n","      <td>70.000000</td>\n","      <td>14.000000</td>\n","      <td>248.0</td>\n","      <td>183.0</td>\n","      <td>0.65</td>\n","      <td>0.645</td>\n","      <td>51.0</td>\n","      <td>36.0</td>\n","      <td>545.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>50</td>\n","      <td>103.000000</td>\n","      <td>65.0</td>\n","      <td>70.000000</td>\n","      <td>20.000000</td>\n","      <td>248.0</td>\n","      <td>186.0</td>\n","      <td>0.65</td>\n","      <td>1.302</td>\n","      <td>52.0</td>\n","      <td>36.0</td>\n","      <td>545.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>50</td>\n","      <td>125.000000</td>\n","      <td>75.0</td>\n","      <td>72.000000</td>\n","      <td>18.000000</td>\n","      <td>248.0</td>\n","      <td>135.0</td>\n","      <td>0.80</td>\n","      <td>0.945</td>\n","      <td>53.0</td>\n","      <td>35.9</td>\n","      <td>537.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>50</td>\n","      <td>114.000000</td>\n","      <td>73.0</td>\n","      <td>72.000000</td>\n","      <td>15.000000</td>\n","      <td>168.0</td>\n","      <td>225.0</td>\n","      <td>0.84</td>\n","      <td>2.331</td>\n","      <td>75.0</td>\n","      <td>36.0</td>\n","      <td>537.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>50</td>\n","      <td>115.076923</td>\n","      <td>75.0</td>\n","      <td>62.173913</td>\n","      <td>16.666667</td>\n","      <td>248.0</td>\n","      <td>132.0</td>\n","      <td>0.70</td>\n","      <td>0.671</td>\n","      <td>54.0</td>\n","      <td>36.0</td>\n","      <td>553.0</td>\n","      <td>100.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   年齡         收縮壓   舒張壓         脈搏  ...  透析液流速  生理食鹽水  Heparin  Lebal\n","0  50  117.000000  64.0  51.000000  ...  553.0  100.0      0.0      1\n","1  50  129.000000  70.0  49.000000  ...  545.0    0.0      0.0      1\n","2  50  118.000000  63.0  74.000000  ...  545.0  100.0      0.0      1\n","3  50  109.000000  63.0  56.000000  ...  545.0  100.0      0.0      1\n","4  50  133.000000  74.0  77.000000  ...  545.0   20.0      0.0      1\n","5  50  107.000000  68.0  70.000000  ...  545.0  100.0      0.0      1\n","6  50  103.000000  65.0  70.000000  ...  545.0  100.0      0.0      1\n","7  50  125.000000  75.0  72.000000  ...  537.0  100.0      0.0      1\n","8  50  114.000000  73.0  72.000000  ...  537.0  100.0      0.0      1\n","9  50  115.076923  75.0  62.173913  ...  553.0  100.0      0.0      1\n","\n","[10 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"gO7slik5XdPI"},"source":["#打亂資料\n","df_train = shuffle(np.array(df))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Wi0lo90jJnRK","colab":{"base_uri":"https://localhost:8080/","height":463},"executionInfo":{"status":"ok","timestamp":1586240975069,"user_tz":-480,"elapsed":13289,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"e2966d1d-d2a5-49f8-d174-f11987b0cdab"},"source":["#切開x跟y,注意python是由0開始數\n","x = df_train[:,0:14]\n","y = df_train[:,14]\n","\n","#Normalize x\n","x=preprocessing.scale(x)\n","\n","print('x形狀',x.shape)\n","print('y形狀',y.shape)\n","print('\\n------------------------\\n')\n","print(\"x\\n\\n\",x)\n","print(\"y\\n\\n\",y)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["x形狀 (13320, 14)\n","y形狀 (13320,)\n","\n","------------------------\n","\n","x\n","\n"," [[ 0.48478035  0.11322191 -0.176027   ... -0.46985392 -1.86721748\n","  -0.86118919]\n"," [-0.20979464 -1.09581078 -0.82291698 ... -0.37098457  5.13723571\n","  -0.86118919]\n"," [-0.46236736  1.21557525  0.94132842 ... -0.49681828  0.46760025\n","  -0.86118919]\n"," ...\n"," [ 1.05306897 -0.27793572 -1.11695788 ... -0.23616274 -1.71156297\n","  -0.86118919]\n"," [-0.336081    0.32658062  0.17682208 ...  2.59509575  0.46760025\n","   0.30592484]\n"," [-1.28322871  1.3222546   1.0001366  ... -0.29897537  2.80241798\n","  -0.86118919]]\n","y\n","\n"," [0. 1. 0. ... 0. 0. 1.]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"n_oIxW27KYFj"},"source":["#對y做one-hot encoding\n","#y_onehot = pd.get_dummies(y)\n","#print(\"y_onehot  \",\"\\n\\n\",y_onehot)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xMz9cSiv7_Ed"},"source":["## 切開訓練集和測試集"]},{"cell_type":"code","metadata":{"id":"jB4OASAt8DAi","colab":{"base_uri":"https://localhost:8080/","height":604},"executionInfo":{"status":"ok","timestamp":1586240975070,"user_tz":-480,"elapsed":13275,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"55dbb9f3-75a9-47e4-b540-d7a03175600a"},"source":["#test集以0.1切割\n","x_train, x_test , y_train, y_test = train_test_split(x, y, test_size=0.1)\n","\n","#對 y_train 做 one-hot encoding\n","y_train_onehot = pd.get_dummies(y_train)\n","print(\"        y_onehot\",\"\\n\\n\",y_train_onehot)\n","\n","print(\"\\n---------------------\\n\\nTrain-Test Shape\")\n","print(\" x_train\\n\",x_train.shape,\"\\n\")\n","print(\" x_test\\n\",x_test.shape,\"\\n\")\n","print(\" y_train_onehot\\n\",y_train_onehot.shape,\"\\n\")\n","print(\" y_test\\n\",y_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["        y_onehot \n","\n","        0.0  1.0\n","0        0    1\n","1        0    1\n","2        0    1\n","3        0    1\n","4        1    0\n","...    ...  ...\n","11983    0    1\n","11984    1    0\n","11985    1    0\n","11986    0    1\n","11987    1    0\n","\n","[11988 rows x 2 columns]\n","\n","---------------------\n","\n","Train-Test Shape\n"," x_train\n"," (11988, 14) \n","\n"," x_test\n"," (1332, 14) \n","\n"," y_train_onehot\n"," (11988, 2) \n","\n"," y_test\n"," (1332,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_GJp8zoXyV_D","colab":{"base_uri":"https://localhost:8080/","height":145},"executionInfo":{"status":"ok","timestamp":1586240975070,"user_tz":-480,"elapsed":13265,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"3a510463-6fe3-4d4b-f0f9-53249264e717"},"source":["#Reshape x for model\n","x_train_reshape = np.reshape(x_train, (len(x_train), len(x_train[0]),1))\n","x_test_reshape = np.reshape(x_test, (len(x_test), len(x_test[0]),1))\n","\n","print(\" x_train_reshape\\n\",x_train_reshape.shape,\"\\n\")\n","print(\" x_test_reshape\\n\",x_test_reshape.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" x_train_reshape\n"," (11988, 14, 1) \n","\n"," x_test_reshape\n"," (1332, 14, 1)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4gjVEjsxZ6sS"},"source":["## 模型 & 超參數\n","![](https://is.gd/TUCfqP)"]},{"cell_type":"code","metadata":{"id":"6h_b0kjmJtq6","colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"status":"ok","timestamp":1586240975071,"user_tz":-480,"elapsed":13254,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"a15bd1c9-ccc1-4d9b-d8c2-58dc11ffae4f"},"source":["# 超參數\n","num_classes = 2\n","epoch = 50\n","learning_rate = 3e-4\n","hidden_units = 200 \n","batch_size = 32\n","input_shape = x_train_reshape.shape[1:]\n","\n","# Optimizer\n","#optim= RMSprop(lr=learning_rate)\n","optim = Adam(lr=learning_rate)\n","#optim = Lookahead(RAdam())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/ops/resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n","Instructions for updating:\n","If using Keras pass *_constraint arguments to layers.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"5qoP3tTlIQoX"},"source":["### LSTM"]},{"cell_type":"code","metadata":{"id":"bH3-6dB8Gbfv"},"source":["# 模型\n","def LSTM_model():\n","  model = Sequential(name = 'LSTM')\n","  model.add(layers.LSTM(hidden_units,\n","                       input_shape = input_shape,\n","                       name = 'LSTM_1'))\n","  model.add(layers.Dense(num_classes, name = 'FC_1'))\n","  model.add(layers.Activation('softmax',name = 'Activation_1'))\n","  return model"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VMOotGryR5_Z"},"source":["### GRU"]},{"cell_type":"code","metadata":{"id":"3mweNufJO78s"},"source":["def GRU_model():\n","  model = Sequential(name = 'GRU')\n","  model.add(layers.GRU(hidden_units,\n","                    input_shape = input_shape,\n","                    name = \"GRU_1\"))\n","  model.add(layers.Dense(num_classes, name = 'FC1'))\n","  model.add(layers.Activation('softmax', name = 'Activation_1'))\n","  return model"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"BMepk_AYJlNA"},"source":["### IRNN\n","2015 Hinton 的團隊提出以初始化方法避免 RNN 的梯度消失<br>\n","[Arxiv Link](https://arxiv.org/pdf/1504.00941.pdf)\n"]},{"cell_type":"code","metadata":{"id":"8JCUFdGWJd3b"},"source":["def IRNN_model():\n","  model = Sequential(name = \"IRNN\")\n","\n","  model.add(layers.SimpleRNN(hidden_units,\n","                             recurrent_initializer = initializers.Identity(gain=1.0),\n","                             activation = 'relu',# 注意： 一般的 RNN 系列不能用 relu !\n","                             input_shape = input_shape,\n","                             name = \"RNN_1\"))\n","\n","  model.add(layers.Dense(num_classes,name = \"FC_1\"))\n","  model.add(layers.Activation('softmax',name = \"Activation_1\"))\n","  return model"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wcgdQEUPa7OX"},"source":["## 決定訓練的方法"]},{"cell_type":"code","metadata":{"id":"vCTlRZMhXIp-","colab":{"base_uri":"https://localhost:8080/","height":460},"executionInfo":{"status":"error","timestamp":1586240975878,"user_tz":-480,"elapsed":14040,"user":{"displayName":"李政軒","photoUrl":"","userId":"08086314053421830905"}},"outputId":"42faa22c-a816-4eaa-ccab-ccc87ae9ebe0"},"source":["# 選一個模型\n","#model = GRU_model()\n","model = LSTM_model()\n","#model = IRNN_model()        \n","\n","# 指定 optimizer, loss function, metric\n","model.compile(loss='binary_crossentropy',\n","              optimizer=optim,\n","              metrics=['accuracy'])\n","\n","# 印出超參數設置做檢查\n","print(\"-----------------------\\n\\n超參數設置:\\n\\n\",\"種類:\",\n","      num_classes,\"種\",\"\\n 學習率:\",learning_rate,\"\\n 輸入形狀:\",\n","      input_shape,\"\\n batch_size:\",batch_size,\"\\n Epoch:\",epoch,\"\\n\\n\")\n","print('optimizer: ',str(optim))\n","print(\"\\n-----------------------\\n\")\n","\n","# 印出模型細節\n","model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n"],"name":"stdout"},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-26afc8e94389>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLSTM_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;31m#model = IRNN_model()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# 指定 optimizer, loss function, metric\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m model.compile(loss='binary_crossentropy',\n","\u001b[0;32m<ipython-input-16-f0970a956d0f>\u001b[0m in \u001b[0;36mLSTM_model\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m   model.add(layers.LSTM(hidden_units,\n\u001b[1;32m      4\u001b[0m                        \u001b[0minput_shape\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput_shape\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m                        name = 'LSTM_1'))\n\u001b[0m\u001b[1;32m      6\u001b[0m   \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlayers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum_classes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'FC_1'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m   \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlayers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mActivation\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'softmax'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mname\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'Activation_1'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-1.15.2/python3.6/tensorflow_core/python/training/tracking/base.py\u001b[0m in \u001b[0;36m_method_wrapper\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    455\u001b[0m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_self_setattr_tracking\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 457\u001b[0;31m       \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    458\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_self_setattr_tracking\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprevious_value\u001b[0m  \u001b[0;31m# pylint: disable=protected-access\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/tensorflow-1.15.2/python3.6/tensorflow_core/python/keras/engine/sequential.py\u001b[0m in \u001b[0;36madd\u001b[0;34m(self, layer)\u001b[0m\n\u001b[1;32m    155\u001b[0m       raise TypeError('The added layer must be '\n\u001b[1;32m    156\u001b[0m                       \u001b[0;34m'an instance of class Layer. '\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 157\u001b[0;31m                       'Found: ' + str(layer))\n\u001b[0m\u001b[1;32m    158\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    159\u001b[0m     \u001b[0mtf_utils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0massert_no_legacy_layers\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mlayer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: The added layer must be an instance of class Layer. Found: <keras.layers.recurrent.LSTM object at 0x7f8d9bba6198>"]}]},{"cell_type":"code","metadata":{"id":"iob1VjmTdF9r"},"source":["history = model.fit(x_train_reshape,y_train_onehot,\n","                    epochs = epoch,\n","                    batch_size = batch_size,\n","                    validation_split = 0.1,\n","                    verbose = 2, # 常用1,2,網頁會當的話推薦用2\n","                   )"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6H9uktTlWi2p"},"source":["#混淆矩陣\n","\n","P = TP+FN<br>\n","N = TN+FP<br>\n","\n","|  | Real Positive | Real Nagative |\n","| -------- | -------- | -------- |\n","| Predict Positive    | TP     | FP     |\n","| Predict Nagative     |  FN   | TN     |"]},{"cell_type":"code","metadata":{"id":"pOoZSBmbFFTU"},"source":["# Example\n","y_true = [1, 0, 1, 1, 0, 1, 1, 1, 1]\n","y_pred = [0, 0, 1, 1, 0, 1, 1, 1, 1]\n","\n","tn, fp, fn, tp = confusion_matrix(y_true,y_pred).ravel()\n","\n","print(confusion_matrix(y_true,y_pred))\n","print(tn, fp, fn, tp)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"i5u1iju-ITHA"},"source":["從上面的結果看起來sklearn的混淆矩陣是這樣排列的 tn,fp,fn,tp"]},{"cell_type":"code","metadata":{"id":"o9HH0l_iO3_2"},"source":["# 用模型對測試級做分類\n","pred =  model.predict(x_test_reshape)\n","\n","# 將分類轉回原格式\n","y_pred = np.argmax(pred,axis=1)\n","\n","# \n","tn, fp, fn, tp = confusion_matrix(y_test,y_pred).ravel()\n","\n","print(\"在\",len(y_test),\"的數據量上做測試\\n\")\n","print(\"混淆矩陣\\n\",confusion_matrix(y_test, y_pred))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2zLSPnmlegYH"},"source":["# Precision\n","tp/(tp+fp)\n","# Recall\n","tp/(tp+fn)\n","# Recall的NP反過來 -> Specitivity\n","tn/(tn+fp)\n","# Precision NP反過來 -> \n","tn/(tn+fn)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pkxh5LprY6Ms"},"source":["### Precision : $\\dfrac{TP}{TP+FP}$\n","###Recall & Sensitivity : $\\dfrac{TP}{P}$\n","### Specitivity : $\\dfrac{TN}{N}$\n","\n","###Accuracy : $\\dfrac{TP+TN}{P+N}$"]},{"cell_type":"code","metadata":{"id":"S49kBjK3YjOy"},"source":["# 各行為以那類為 positive 的情況代入公式\n","target_names = ['0', '1']\n","_report=(classification_report(y_test, y_pred, target_names = target_names))\n","\n","print(_report)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jijVpAvfuxxz"},"source":["precision_recall_curve(y_test,y_pred)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FLLU0syMI-pv"},"source":["precision, recall, thresholds = precision_recall_curve(y_test,y_pred)\n","from inspect import signature\n","\n","# In matplotlib < 1.5, plt.fill_between does not have a 'step' argument\n","step_kwargs = ({'step': 'post'}\n","               if 'step' in signature(plt.fill_between).parameters\n","               else {})\n","plt.step(recall, precision, color='b', alpha=0.2,\n","         where='post')\n","plt.fill_between(recall, precision, alpha=0.2, color='b', **step_kwargs)\n","\n","plt.xlabel('Recall')\n","plt.ylabel('Precision')\n","plt.ylim([0.0, 1.05])\n","plt.xlim([0.0, 1.0])\n","plt.title('')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"B4bN-A2smPNJ"},"source":["precisions, recalls, thresholds = precision_recall_curve(y_test,y_pred)\n","# To plot pretty \n","plt.rcParams['axes.labelsize'] = 14\n","plt.rcParams['xtick.labelsize'] = 12\n","plt.rcParams['ytick.labelsize'] = 12\n","\n","# Where to save the figures\n","PROJECT_ROOT_DIR = \".\"\n","CHAPTER_ID = \"classification\"\n","\n","\n","def save_fig(fig_id, tight_layout=True):\n","    path = os.path.join(PROJECT_ROOT_DIR, \"images\", CHAPTER_ID, fig_id + \".png\")\n","    print(\"Saving figure\", fig_id)\n","    if tight_layout:\n","        plt.tight_layout()\n","    plt.savefig(path, format='png', dpi=300)\n","\n","\n","def plot_precision_recall_vs_threshold(precisions, recalls, thresholds):\n","    plt.plot(thresholds, precisions[:-1], \"b--\", label=\"Precision\", linewidth=2)\n","    plt.plot(thresholds, recalls[:-1], \"g-\", label=\"Recall\", linewidth=2)\n","    plt.xlabel(\"Threshold\", fontsize=16)\n","    plt.legend(loc=\"upper left\", fontsize=16)\n","    plt.ylim([0, 1])\n","\n","plt.figure(figsize=(8, 4))\n","plot_precision_recall_vs_threshold(precisions, recalls, thresholds)\n","plt.xlim([-0, 1.])\n","#save_fig(\"precision_recall_vs_threshold_plot\")\n","#plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gz53E6b3ZXPc"},"source":["## 繪圖"]},{"cell_type":"code","metadata":{"id":"tyzE9sIYP5Kz"},"source":["plt.plot(history.history['acc'])\n","plt.plot(history.history['val_acc'])\n","plt.title('model accuracy')\n","plt.ylabel('accuracy')\n","plt.xlabel('epochs')\n","plt.legend(['train', 'val'], loc='upper left')\n","\n","#存圖\n","#plt.savefig(path+'/result_cnn_acc.png')\n","#plt.show()\n","# summarize history for loss plt.plot(history.history['loss']) plt.plot(history.history['val_loss']) plt.title('model loss')\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rT_AqLK9Pmyi"},"source":["plt.title('model loss')\n","plt.plot(history.history['loss'])\n","plt.plot(history.history['val_loss'])\n","plt.ylabel('loss')\n","plt.xlabel('epochs')\n","plt.legend(['train', 'validation'], loc='upper left')\n","\n","#存圖\n","#plt.savefig(path+'/result_cnn_loss.png')\n","#plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xo7sz7NFn-hb"},"source":["#from tensorflow.keras.utils import plot_model\n","\n","#plot_model(model,to_file=path+'/model.png')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"k9VnFmc6ZhKP"},"source":["## Test Data"]},{"cell_type":"code","metadata":{"id":"LxXBi7ivcmq1"},"source":["model.evaluate(x_test,y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"i4zzwLCwxVZ4"},"source":["y_pred = model.predict(x_test)\n","\n","print(y_pred)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Wd3ZyXsFkWOw"},"source":["##做大矩陣\n","pred_inverse=[]\n","n=8\n","\n","for thershold in range(1,n):\n","  for i in range (0,1332):\n","    u=0.1*thershold\n","\n","    if y_pred[i,0]>u :\n","      pred_inverse.append(0)\n","    else :\n","      pred_inverse.append(1)\n","\n","pred_inverse=np.reshape(pred_inverse,(n-1,1332))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YM6kFOhAldIw"},"source":["#大矩陣的樣子\n","print(pred_inverse)\n","print(np.array(pred_inverse).shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aN6RaEvUujhz"},"source":["#from sklearn.metrics import roc_curve\n","#from sklearn.metrics import auc\n","\n","#pred_inverse_1 = [np.argmax(one_hot)for one_hot in y_pred]\n","\n","#print(pred_inverse_1)\n","#print(np.array(pred_inverse_1).shape)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"U_dAA5aezxw8"},"source":["y_test_inverse= ((y_test.idxmax(axis=1))\n","print(y_test.shape)\n","print(y_test_inverse.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lzaUj4jWq1Kd"},"source":["roc_curve(y_test,y_pred)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FBZOP2NVrAyk"},"source":["y_pred"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0sQgmCkZyzTa"},"source":["#取中間那個點，頭尾加上0,1\n","\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import auc\n","#頭先給0\n","fpr_all=[0,]\n","tpr_all=[0,]\n","n=100\n","# 把大矩陣的每一行分開取中間那個值\n","for i in range(0,n-1):\n","  fpr, tpr, thresholds  =  roc_curve(y_test,y_pred)\n","  #fpr_all.append(fpr[1])\n","  #tpr_all.append(tpr[1])\n","\n","#尾再加1\n","fpr_all.append(1)\n","tpr_all.append(1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hrq80EpNtRme"},"source":["roc_auc=auc(fpr_all,tpr_all)\n","\n","print('auc=',roc_auc)\n","\n","plt.figure()\n","\n","lw = 2 #lw似乎是線寬 line width\n","\n","plt.figure(figsize=(10,10))\n","plt.plot(fpr_all, tpr_all, color='darkorange',\n","lw=lw, label='ROC curve (area = %0.2f)')  ### 假正率為橫座標，真正率為縱座標做曲線\n","\n","#plt.plot(fpr1, tpr1, color='darkorange')\n","\n","plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n","plt.xlim([0.0, 1.0])\n","plt.ylim([0.0, 1.05])\n","         \n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.title('Receiver operating characteristic ')\n","plt.legend(loc=\"lower right\")\n","\n","#plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"N5-xRN3SZcSb"},"source":["## 存權重"]},{"cell_type":"code","metadata":{"id":"zfv1NCInFHFJ"},"source":["#存的位置\n","result_path=\"/content/drive/My Drive\"\n","#存的檔名\n","mp = result_path+\"/test1.h5\"\n","#save\n","model.save(mp)"],"execution_count":null,"outputs":[]}]}